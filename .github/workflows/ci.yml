name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: Lint and Type Check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 mypy pre-commit
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Run pre-commit hooks
      run: pre-commit run --all-files
    
    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics
    
    - name: Type check with mypy
      run: mypy load.py --ignore-missing-imports
    
    - name: Run test suite
      run: |
        cd test
        python run_tests.py

  package:
    name: Create Development Package
    runs-on: ubuntu-latest
    needs: lint
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Extract version
      id: version
      run: |
        VERSION=$(grep "VERSION = " load.py | sed "s/VERSION = ['\"]\\([^'\"]*\\)['\"].*/\\1/")
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "Detected version: $VERSION"
    
    - name: Create development package
      run: |
        VERSION="${{ steps.version.outputs.VERSION }}"
        PACKAGE_NAME="EDMC-StreamSource-Dev-$VERSION-${{ github.sha }}"
        
        mkdir -p "dist/$PACKAGE_NAME"
        cp load.py "dist/$PACKAGE_NAME/"
        cp README.md "dist/$PACKAGE_NAME/"
        cp LICENSE "dist/$PACKAGE_NAME/"
        
        if [ -f "CHANGELOG.md" ]; then
          cp CHANGELOG.md "dist/$PACKAGE_NAME/"
        fi
        
        # Create development build info
        cat > "dist/$PACKAGE_NAME/DEV_BUILD.txt" << EOF
        EDMC-StreamSource Development Build
        ==================================
        
        Version: $VERSION
        Commit: ${{ github.sha }}
        Branch: ${{ github.ref_name }}
        Build Date: $(date -u +"%Y-%m-%d %H:%M:%S UTC")
        
        WARNING: This is a development build and may be unstable.
        For stable releases, use the official releases from:
        https://github.com/${{ github.repository }}/releases
        EOF
        
        cd dist
        zip -r "$PACKAGE_NAME.zip" "$PACKAGE_NAME/"
    
    - name: Upload development package
      uses: actions/upload-artifact@v4
      with:
        name: EDMC-StreamSource-Dev-${{ steps.version.outputs.VERSION }}
        path: dist/EDMC-StreamSource-Dev-${{ steps.version.outputs.VERSION }}-${{ github.sha }}.zip